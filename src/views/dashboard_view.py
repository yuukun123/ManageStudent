from PyQt5 import uic  # Th√™m uic ƒë·ªÉ load file .ui tr·ª±c ti·∫øp
from PyQt5.QtCore import Qt
from src.controllers.buttonController import buttonController
from src.views.moveable_window import MoveableWindow
from src.controllers.logoutController import LogoutController


class DashboardWindow(MoveableWindow):
    def __init__(self, username):
        super().__init__()
        # Load file .ui tr·ª±c ti·∫øp
        uic.loadUi("../UI/forms/dashboardWindow.ui", self)

        # V√≠ d·ª• ƒë·ªïi n·ªôi dung userInfoLabel
        self.userInfoLabel.setText(f"üë§ {username} (Online üü¢)")

        # T·∫°o controller, truy·ªÅn self v√†o
        self.buttonController = buttonController(self)

        # T·∫°o controller, truy·ªÅn self v√†o
        self.logout_controller = LogoutController(self)

        # G·∫Øn n√∫t logout
        self.logoutBtn.clicked.connect(lambda: self.logout_controller.handle_logout())


        # G·∫Øn s·ª± ki·ªán n√∫t
        self.closeBtn.clicked.connect(self.buttonController.handle_close)
        self.hiddenBtn.clicked.connect(self.buttonController.handle_hidden)

        # G·∫Øn n√∫t
        self.maximizeBtn.clicked.connect(self.buttonController.toggle_maximize_restore)
        self.restoreBtn.clicked.connect(self.buttonController.toggle_maximize_restore)

        # ·∫®n n√∫t restore l√∫c ƒë·∫ßu
        self.restoreBtn.hide()

        # Th√™m frameless + trong su·ªët
        self.setWindowFlags(Qt.FramelessWindowHint)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.setWindowOpacity(1.0)




